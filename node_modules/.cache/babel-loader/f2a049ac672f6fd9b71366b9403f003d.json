{"ast":null,"code":"var _jsxFileName = \"/Users/jnanaure87/Desktop/Web_Personal_IC_ConBsaleProductos/web-personal-client-master/src/components/Admin/Blog/PostsList/PostsList.js\";\nimport React from \"react\";\nimport { List, Button, Icon, Modal, notification } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { getAccessTokenApi } from \"../../../../api/auth\";\nimport { deletePostApi } from \"../../../../api/post\";\nimport \"./PostsList.scss\";\nconst confirm = Modal.confirm;\nexport default function PostsList(props) {\n  const posts = props.posts,\n        setReloadPosts = props.setReloadPosts,\n        editPost = props.editPost;\n\n  const deletePost = post => {\n    const accessToken = getAccessTokenApi();\n    confirm({\n      title: \"Eliminando post\",\n      content: `¿Estas segurod de eliminar el post ${post.title}?`,\n      okText: \"Eliminar\",\n      okType: \"danger\",\n      cancelText: \"Cancelar\",\n\n      onOk() {\n        deletePostApi(accessToken, post._id).then(response => {\n          const typeNotification = response.code === 200 ? \"success\" : \"warning\";\n          notification[typeNotification]({\n            message: response.message\n          });\n          setReloadPosts(true);\n        }).catch(() => {\n          notification[\"error\"]({\n            message: \"Error del servidor.\"\n          });\n        });\n      }\n\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"posts-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(List, {\n    dataSource: posts.docs,\n    renderItem: post => React.createElement(Post, {\n      post: post,\n      deletePost: deletePost,\n      editPost: editPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }));\n}\n\nfunction Post(props) {\n  const post = props.post,\n        deletePost = props.deletePost,\n        editPost = props.editPost;\n  return React.createElement(List.Item, {\n    actions: [React.createElement(Link, {\n      to: `/blog/${post.url}`,\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"eye\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }))), React.createElement(Button, {\n      type: \"primary\",\n      onClick: () => editPost(post),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"danger\",\n      onClick: () => deletePost(post),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }))],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(List.Item.Meta, {\n    title: post.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/jnanaure87/Desktop/Web_Personal_IC_ConBsaleProductos/web-personal-client-master/src/components/Admin/Blog/PostsList/PostsList.js"],"names":["React","List","Button","Icon","Modal","notification","Link","getAccessTokenApi","deletePostApi","confirm","PostsList","props","posts","setReloadPosts","editPost","deletePost","post","accessToken","title","content","okText","okType","cancelText","onOk","_id","then","response","typeNotification","code","message","catch","docs","Post","url"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { List, Button, Icon, Modal, notification } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { getAccessTokenApi } from \"../../../../api/auth\";\nimport { deletePostApi } from \"../../../../api/post\";\n\nimport \"./PostsList.scss\";\n\nconst { confirm } = Modal;\n\nexport default function PostsList(props) {\n  const { posts, setReloadPosts, editPost } = props;\n\n  const deletePost = post => {\n    const accessToken = getAccessTokenApi();\n\n    confirm({\n      title: \"Eliminando post\",\n      content: `¿Estas segurod de eliminar el post ${post.title}?`,\n      okText: \"Eliminar\",\n      okType: \"danger\",\n      cancelText: \"Cancelar\",\n      onOk() {\n        deletePostApi(accessToken, post._id)\n          .then(response => {\n            const typeNotification =\n              response.code === 200 ? \"success\" : \"warning\";\n            notification[typeNotification]({\n              message: response.message\n            });\n            setReloadPosts(true);\n          })\n          .catch(() => {\n            notification[\"error\"]({\n              message: \"Error del servidor.\"\n            });\n          });\n      }\n    });\n  };\n\n  return (\n    <div className=\"posts-list\">\n      <List\n        dataSource={posts.docs}\n        renderItem={post => (\n          <Post post={post} deletePost={deletePost} editPost={editPost} />\n        )}\n      />\n    </div>\n  );\n}\n\nfunction Post(props) {\n  const { post, deletePost, editPost } = props;\n\n  return (\n    <List.Item\n      actions={[\n        <Link to={`/blog/${post.url}`} target=\"_blank\">\n          <Button type=\"primary\">\n            <Icon type=\"eye\" />\n          </Button>\n        </Link>,\n        <Button type=\"primary\" onClick={() => editPost(post)}>\n          <Icon type=\"edit\" />\n        </Button>,\n        <Button type=\"danger\" onClick={() => deletePost(post)}>\n          <Icon type=\"delete\" />\n        </Button>\n      ]}\n    >\n      <List.Item.Meta title={post.title} />\n    </List.Item>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}