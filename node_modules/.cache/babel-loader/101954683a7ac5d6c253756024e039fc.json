{"ast":null,"code":"import _slicedToArray from \"/Users/jnanaure87/Desktop/Web_Personal_IC_ConBsaleProductos/web-personal-client-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jnanaure87/Desktop/Web_Personal_IC_ConBsaleProductos/web-personal-client-master/src/components/Admin/Users/ListUsers/ListUsers.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Switch, List, Avatar, Button, Icon, Modal as ModalAntd, notification } from \"antd\";\nimport NoAvatar from \"../../../../assets/img/png/no-avatar.png\";\nimport Modal from \"../../../Modal\";\nimport EditUserForm from \"../EditUserForm\";\nimport AddUserForm from \"../AddUserForm\";\nimport { getAvatarApi, activateUserApi, deleteUserApi } from \"../../../../api/user\";\nimport { getAccessTokenApi } from \"../../../../api/auth\";\nimport \"./ListUsers.scss\";\nconst confirm = ModalAntd.confirm;\nexport default function ListUsers(props) {\n  const usersActive = props.usersActive,\n        usersInactive = props.usersInactive,\n        setReloadUsers = props.setReloadUsers;\n\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        viewUsersActives = _useState2[0],\n        setViewUsersActives = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isVisibleModal = _useState4[0],\n        setIsVisibleModal = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        modalTitle = _useState6[0],\n        setModalTitle = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        modalContent = _useState8[0],\n        setModalContent = _useState8[1];\n\n  const addUserModal = () => {\n    setIsVisibleModal(true);\n    setModalTitle(\"Creando nuevo usuario\");\n    setModalContent(React.createElement(AddUserForm, {\n      setIsVisibleModal: setIsVisibleModal,\n      setReloadUsers: setReloadUsers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"list-users\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list-users__header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list-users__header-switch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    defaultChecked: true,\n    onChange: () => setViewUsersActives(!viewUsersActives),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, viewUsersActives ? \"Usuarios Activos\" : \"Usuarios Inactivos\")), React.createElement(Button, {\n    type: \"primary\",\n    onClick: addUserModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Nuevo usuario\")), viewUsersActives ? React.createElement(UsersActive, {\n    usersActive: usersActive,\n    setIsVisibleModal: setIsVisibleModal,\n    setModalTitle: setModalTitle,\n    setModalContent: setModalContent,\n    setReloadUsers: setReloadUsers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }) : React.createElement(UsersInactive, {\n    usersInactive: usersInactive,\n    setReloadUsers: setReloadUsers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(Modal, {\n    title: modalTitle,\n    isVisible: isVisibleModal,\n    setIsVisible: setIsVisibleModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, modalContent));\n}\n\nfunction UsersActive(props) {\n  const usersActive = props.usersActive,\n        setIsVisibleModal = props.setIsVisibleModal,\n        setModalTitle = props.setModalTitle,\n        setModalContent = props.setModalContent,\n        setReloadUsers = props.setReloadUsers;\n\n  const editUser = user => {\n    setIsVisibleModal(true);\n    setModalTitle(`Editar ${user.name ? user.name : \"...\"} ${user.lastname ? user.lastname : \"...\"}`);\n    setModalContent(React.createElement(EditUserForm, {\n      user: user,\n      setIsVisibleModal: setIsVisibleModal,\n      setReloadUsers: setReloadUsers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(List, {\n    className: \"users-active\",\n    itemLayout: \"horizontal\",\n    dataSource: usersActive,\n    renderItem: user => React.createElement(UserActive, {\n      user: user,\n      editUser: editUser,\n      setReloadUsers: setReloadUsers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  });\n}\n\nfunction UserActive(props) {\n  const user = props.user,\n        editUser = props.editUser,\n        setReloadUsers = props.setReloadUsers;\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        avatar = _useState10[0],\n        setAvatar = _useState10[1];\n\n  useEffect(() => {\n    if (user.avatar) {\n      getAvatarApi(user.avatar).then(response => {\n        setAvatar(response);\n      });\n    } else {\n      setAvatar(null);\n    }\n  }, [user]);\n\n  const desactivateUser = () => {\n    const accesToken = getAccessTokenApi();\n    activateUserApi(accesToken, user._id, false).then(response => {\n      notification[\"success\"]({\n        message: response\n      });\n      setReloadUsers(true);\n    }).catch(err => {\n      notification[\"error\"]({\n        message: err\n      });\n    });\n  };\n\n  const showDeleteConfirm = () => {\n    const accesToken = getAccessTokenApi();\n    confirm({\n      title: \"Eliminando usuario\",\n      content: `Â¿Estas seguro que quieres eliminar a ${user.email}?`,\n      okText: \"Eliminar\",\n      okType: \"danger\",\n      cancelText: \"Cancelar\",\n\n      onOk() {\n        deleteUserApi(accesToken, user._id).then(response => {\n          notification[\"success\"]({\n            message: response\n          });\n          setReloadUsers(true);\n        }).catch(err => {\n          notification[\"error\"]({\n            message: err\n          });\n        });\n      }\n\n    });\n  };\n\n  return React.createElement(List.Item, {\n    actions: [React.createElement(Button, {\n      type: \"primary\",\n      onClick: () => editUser(user),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"danger\",\n      onClick: desactivateUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"stop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"danger\",\n      onClick: showDeleteConfirm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }))],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(List.Item.Meta, {\n    avatar: React.createElement(Avatar, {\n      src: avatar ? avatar : NoAvatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }),\n    title: `\n                ${user.name ? user.name : \"...\"} \n                ${user.lastname ? user.lastname : \"...\"}\n            `,\n    description: user.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }));\n}\n\nfunction UsersInactive(props) {\n  const usersInactive = props.usersInactive,\n        setReloadUsers = props.setReloadUsers;\n  return React.createElement(List, {\n    className: \"users-active\",\n    itemLayout: \"horizontal\",\n    dataSource: usersInactive,\n    renderItem: user => React.createElement(UserInactive, {\n      user: user,\n      setReloadUsers: setReloadUsers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  });\n}\n\nfunction UserInactive(props) {\n  const user = props.user,\n        setReloadUsers = props.setReloadUsers;\n\n  const _useState11 = useState(null),\n        _useState12 = _slicedToArray(_useState11, 2),\n        avatar = _useState12[0],\n        setAvatar = _useState12[1];\n\n  useEffect(() => {\n    if (user.avatar) {\n      getAvatarApi(user.avatar).then(response => {\n        setAvatar(response);\n      });\n    } else {\n      setAvatar(null);\n    }\n  }, [user]);\n\n  const activateUser = () => {\n    const accesToken = getAccessTokenApi();\n    activateUserApi(accesToken, user._id, true).then(response => {\n      notification[\"success\"]({\n        message: response\n      });\n      setReloadUsers(true);\n    }).catch(err => {\n      notification[\"error\"]({\n        message: err\n      });\n    });\n  };\n\n  const showDeleteConfirm = () => {\n    const accesToken = getAccessTokenApi();\n    confirm({\n      title: \"Eliminando usuario\",\n      content: `Â¿Estas seguro que quieres eliminar a ${user.email}?`,\n      okText: \"Eliminar\",\n      okType: \"danger\",\n      cancelText: \"Cancelar\",\n\n      onOk() {\n        deleteUserApi(accesToken, user._id).then(response => {\n          notification[\"success\"]({\n            message: response\n          });\n          setReloadUsers(true);\n        }).catch(err => {\n          notification[\"error\"]({\n            message: err\n          });\n        });\n      }\n\n    });\n  };\n\n  return React.createElement(List.Item, {\n    actions: [React.createElement(Button, {\n      type: \"primary\",\n      onClick: activateUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"danger\",\n      onClick: showDeleteConfirm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }))],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }, React.createElement(List.Item.Meta, {\n    avatar: React.createElement(Avatar, {\n      src: avatar ? avatar : NoAvatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }),\n    title: `\n                    ${user.name ? user.name : \"...\"} \n                    ${user.lastname ? user.lastname : \"...\"}\n                `,\n    description: user.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/jnanaure87/Desktop/Web_Personal_IC_ConBsaleProductos/web-personal-client-master/src/components/Admin/Users/ListUsers/ListUsers.js"],"names":["React","useState","useEffect","Switch","List","Avatar","Button","Icon","Modal","ModalAntd","notification","NoAvatar","EditUserForm","AddUserForm","getAvatarApi","activateUserApi","deleteUserApi","getAccessTokenApi","confirm","ListUsers","props","usersActive","usersInactive","setReloadUsers","viewUsersActives","setViewUsersActives","isVisibleModal","setIsVisibleModal","modalTitle","setModalTitle","modalContent","setModalContent","addUserModal","UsersActive","editUser","user","name","lastname","UserActive","avatar","setAvatar","then","response","desactivateUser","accesToken","_id","message","catch","err","showDeleteConfirm","title","content","email","okText","okType","cancelText","onOk","UsersInactive","UserInactive","activateUser"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Switch,\n  List,\n  Avatar,\n  Button,\n  Icon,\n  Modal as ModalAntd,\n  notification\n} from \"antd\";\nimport NoAvatar from \"../../../../assets/img/png/no-avatar.png\";\nimport Modal from \"../../../Modal\";\nimport EditUserForm from \"../EditUserForm\";\nimport AddUserForm from \"../AddUserForm\";\nimport {\n  getAvatarApi,\n  activateUserApi,\n  deleteUserApi\n} from \"../../../../api/user\";\nimport { getAccessTokenApi } from \"../../../../api/auth\";\n\nimport \"./ListUsers.scss\";\n\nconst { confirm } = ModalAntd;\n\nexport default function ListUsers(props) {\n  const { usersActive, usersInactive, setReloadUsers } = props;\n  const [viewUsersActives, setViewUsersActives] = useState(true);\n  const [isVisibleModal, setIsVisibleModal] = useState(false);\n  const [modalTitle, setModalTitle] = useState(\"\");\n  const [modalContent, setModalContent] = useState(null);\n\n  const addUserModal = () => {\n    setIsVisibleModal(true);\n    setModalTitle(\"Creando nuevo usuario\");\n    setModalContent(\n      <AddUserForm\n        setIsVisibleModal={setIsVisibleModal}\n        setReloadUsers={setReloadUsers}\n      />\n    );\n  };\n\n  return (\n    <div className=\"list-users\">\n      <div className=\"list-users__header\">\n        <div className=\"list-users__header-switch\">\n          <Switch\n            defaultChecked\n            onChange={() => setViewUsersActives(!viewUsersActives)}\n          />\n          <span>\n            {viewUsersActives ? \"Usuarios Activos\" : \"Usuarios Inactivos\"}\n          </span>\n        </div>\n        <Button type=\"primary\" onClick={addUserModal}>\n          Nuevo usuario\n        </Button>\n      </div>\n\n      {viewUsersActives ? (\n        <UsersActive\n          usersActive={usersActive}\n          setIsVisibleModal={setIsVisibleModal}\n          setModalTitle={setModalTitle}\n          setModalContent={setModalContent}\n          setReloadUsers={setReloadUsers}\n        />\n      ) : (\n        <UsersInactive\n          usersInactive={usersInactive}\n          setReloadUsers={setReloadUsers}\n        />\n      )}\n\n      <Modal\n        title={modalTitle}\n        isVisible={isVisibleModal}\n        setIsVisible={setIsVisibleModal}\n      >\n        {modalContent}\n      </Modal>\n    </div>\n  );\n}\n\nfunction UsersActive(props) {\n  const {\n    usersActive,\n    setIsVisibleModal,\n    setModalTitle,\n    setModalContent,\n    setReloadUsers\n  } = props;\n\n  const editUser = user => {\n    setIsVisibleModal(true);\n    setModalTitle(\n      `Editar ${user.name ? user.name : \"...\"} ${\n        user.lastname ? user.lastname : \"...\"\n      }`\n    );\n    setModalContent(\n      <EditUserForm\n        user={user}\n        setIsVisibleModal={setIsVisibleModal}\n        setReloadUsers={setReloadUsers}\n      />\n    );\n  };\n\n  return (\n    <List\n      className=\"users-active\"\n      itemLayout=\"horizontal\"\n      dataSource={usersActive}\n      renderItem={user => (\n        <UserActive\n          user={user}\n          editUser={editUser}\n          setReloadUsers={setReloadUsers}\n        />\n      )}\n    />\n  );\n}\n\nfunction UserActive(props) {\n  const { user, editUser, setReloadUsers } = props;\n  const [avatar, setAvatar] = useState(null);\n\n  useEffect(() => {\n    if (user.avatar) {\n      getAvatarApi(user.avatar).then(response => {\n        setAvatar(response);\n      });\n    } else {\n      setAvatar(null);\n    }\n  }, [user]);\n\n  const desactivateUser = () => {\n    const accesToken = getAccessTokenApi();\n\n    activateUserApi(accesToken, user._id, false)\n      .then(response => {\n        notification[\"success\"]({\n          message: response\n        });\n        setReloadUsers(true);\n      })\n      .catch(err => {\n        notification[\"error\"]({\n          message: err\n        });\n      });\n  };\n\n  const showDeleteConfirm = () => {\n    const accesToken = getAccessTokenApi();\n\n    confirm({\n      title: \"Eliminando usuario\",\n      content: `Â¿Estas seguro que quieres eliminar a ${user.email}?`,\n      okText: \"Eliminar\",\n      okType: \"danger\",\n      cancelText: \"Cancelar\",\n      onOk() {\n        deleteUserApi(accesToken, user._id)\n          .then(response => {\n            notification[\"success\"]({\n              message: response\n            });\n            setReloadUsers(true);\n          })\n          .catch(err => {\n            notification[\"error\"]({\n              message: err\n            });\n          });\n      }\n    });\n  };\n\n  return (\n    <List.Item\n      actions={[\n        <Button type=\"primary\" onClick={() => editUser(user)}>\n          <Icon type=\"edit\" />\n        </Button>,\n        <Button type=\"danger\" onClick={desactivateUser}>\n          <Icon type=\"stop\" />\n        </Button>,\n        <Button type=\"danger\" onClick={showDeleteConfirm}>\n          <Icon type=\"delete\" />\n        </Button>\n      ]}\n    >\n      <List.Item.Meta\n        avatar={<Avatar src={avatar ? avatar : NoAvatar} />}\n        title={`\n                ${user.name ? user.name : \"...\"} \n                ${user.lastname ? user.lastname : \"...\"}\n            `}\n        description={user.email}\n      />\n    </List.Item>\n  );\n}\n\nfunction UsersInactive(props) {\n  const { usersInactive, setReloadUsers } = props;\n\n  return (\n    <List\n      className=\"users-active\"\n      itemLayout=\"horizontal\"\n      dataSource={usersInactive}\n      renderItem={user => (\n        <UserInactive user={user} setReloadUsers={setReloadUsers} />\n      )}\n    />\n  );\n}\n\nfunction UserInactive(props) {\n  const { user, setReloadUsers } = props;\n  const [avatar, setAvatar] = useState(null);\n\n  useEffect(() => {\n    if (user.avatar) {\n      getAvatarApi(user.avatar).then(response => {\n        setAvatar(response);\n      });\n    } else {\n      setAvatar(null);\n    }\n  }, [user]);\n\n  const activateUser = () => {\n    const accesToken = getAccessTokenApi();\n\n    activateUserApi(accesToken, user._id, true)\n      .then(response => {\n        notification[\"success\"]({\n          message: response\n        });\n        setReloadUsers(true);\n      })\n      .catch(err => {\n        notification[\"error\"]({\n          message: err\n        });\n      });\n  };\n\n  const showDeleteConfirm = () => {\n    const accesToken = getAccessTokenApi();\n\n    confirm({\n      title: \"Eliminando usuario\",\n      content: `Â¿Estas seguro que quieres eliminar a ${user.email}?`,\n      okText: \"Eliminar\",\n      okType: \"danger\",\n      cancelText: \"Cancelar\",\n      onOk() {\n        deleteUserApi(accesToken, user._id)\n          .then(response => {\n            notification[\"success\"]({\n              message: response\n            });\n            setReloadUsers(true);\n          })\n          .catch(err => {\n            notification[\"error\"]({\n              message: err\n            });\n          });\n      }\n    });\n  };\n\n  return (\n    <List.Item\n      actions={[\n        <Button type=\"primary\" onClick={activateUser}>\n          <Icon type=\"check\" />\n        </Button>,\n        <Button type=\"danger\" onClick={showDeleteConfirm}>\n          <Icon type=\"delete\" />\n        </Button>\n      ]}\n    >\n      <List.Item.Meta\n        avatar={<Avatar src={avatar ? avatar : NoAvatar} />}\n        title={`\n                    ${user.name ? user.name : \"...\"} \n                    ${user.lastname ? user.lastname : \"...\"}\n                `}\n        description={user.email}\n      />\n    </List.Item>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}