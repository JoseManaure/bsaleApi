{"ast":null,"code":"import _objectSpread from \"/Users/jnanaure87/Desktop/Web_Personal_IC_ConBsaleProductos/web-personal-client-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/jnanaure87/Desktop/Web_Personal_IC_ConBsaleProductos/web-personal-client-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jnanaure87/Desktop/Web_Personal_IC_ConBsaleProductos/web-personal-client-master/src/components/Admin/MenuWeb/EditMenuWebForm/EditMenuWebForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Icon, Input, Button, notification } from \"antd\";\nimport { updateMenuApi } from \"../../../../api/menu\";\nimport { getAccessTokenApi } from \"../../../../api/auth\";\nimport \"./EditMenuWebForm.scss\";\nexport default function EditMenuWebForm(props) {\n  const setIsVisibleModal = props.setIsVisibleModal,\n        setReloadMenuWeb = props.setReloadMenuWeb,\n        menu = props.menu;\n\n  const _useState = useState(menu),\n        _useState2 = _slicedToArray(_useState, 2),\n        menuWebData = _useState2[0],\n        setMenuWebData = _useState2[1];\n\n  useEffect(() => {\n    setMenuWebData(menu);\n  }, [menu]);\n\n  const editMenu = event => {\n    event.preventDefault();\n\n    if (!menuWebData.title || !menuWebData.url) {\n      notification[\"error\"]({\n        message: \"Todos los campos son obligatorios.\"\n      });\n    } else {\n      const accesToken = getAccessTokenApi();\n      updateMenuApi(accesToken, menuWebData._id, menuWebData).then(response => {\n        notification[\"success\"]({\n          message: response\n        });\n        setIsVisibleModal(false);\n        setReloadMenuWeb(true);\n      }).catch(() => {\n        notification[\"error\"]({\n          message: \"Error del servidor, intentelo más tarde.\"\n        });\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"edit-menu-web-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(EditForm, {\n    menuWebData: menuWebData,\n    setMenuWebData: setMenuWebData,\n    editMenu: editMenu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }));\n}\n\nfunction EditForm(props) {\n  const menuWebData = props.menuWebData,\n        setMenuWebData = props.setMenuWebData,\n        editMenu = props.editMenu;\n  return React.createElement(Form, {\n    className: \"form-edit\",\n    onSubmit: editMenu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Input, {\n    prefix: React.createElement(Icon, {\n      type: \"font-size\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }),\n    placeholder: \"Titulo\",\n    value: menuWebData.title,\n    onChange: e => setMenuWebData(_objectSpread({}, menuWebData, {\n      title: e.target.value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Input, {\n    prefix: React.createElement(Icon, {\n      type: \"link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }),\n    placeholder: \"URL\",\n    value: menuWebData.url,\n    onChange: e => setMenuWebData(_objectSpread({}, menuWebData, {\n      url: e.target.value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    className: \"btn-submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Actualizar men\\xFA\")));\n}","map":{"version":3,"sources":["/Users/jnanaure87/Desktop/Web_Personal_IC_ConBsaleProductos/web-personal-client-master/src/components/Admin/MenuWeb/EditMenuWebForm/EditMenuWebForm.js"],"names":["React","useState","useEffect","Form","Icon","Input","Button","notification","updateMenuApi","getAccessTokenApi","EditMenuWebForm","props","setIsVisibleModal","setReloadMenuWeb","menu","menuWebData","setMenuWebData","editMenu","event","preventDefault","title","url","message","accesToken","_id","then","response","catch","EditForm","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Form, Icon, Input, Button, notification } from \"antd\";\nimport { updateMenuApi } from \"../../../../api/menu\";\nimport { getAccessTokenApi } from \"../../../../api/auth\";\n\nimport \"./EditMenuWebForm.scss\";\n\nexport default function EditMenuWebForm(props) {\n  const { setIsVisibleModal, setReloadMenuWeb, menu } = props;\n  const [menuWebData, setMenuWebData] = useState(menu);\n\n  useEffect(() => {\n    setMenuWebData(menu);\n  }, [menu]);\n\n  const editMenu = event => {\n    event.preventDefault();\n\n    if (!menuWebData.title || !menuWebData.url) {\n      notification[\"error\"]({\n        message: \"Todos los campos son obligatorios.\"\n      });\n    } else {\n      const accesToken = getAccessTokenApi();\n\n      updateMenuApi(accesToken, menuWebData._id, menuWebData)\n        .then(response => {\n          notification[\"success\"]({\n            message: response\n          });\n          setIsVisibleModal(false);\n          setReloadMenuWeb(true);\n        })\n        .catch(() => {\n          notification[\"error\"]({\n            message: \"Error del servidor, intentelo más tarde.\"\n          });\n        });\n    }\n  };\n\n  return (\n    <div className=\"edit-menu-web-form\">\n      <EditForm\n        menuWebData={menuWebData}\n        setMenuWebData={setMenuWebData}\n        editMenu={editMenu}\n      />\n    </div>\n  );\n}\n\nfunction EditForm(props) {\n  const { menuWebData, setMenuWebData, editMenu } = props;\n\n  return (\n    <Form className=\"form-edit\" onSubmit={editMenu}>\n      <Form.Item>\n        <Input\n          prefix={<Icon type=\"font-size\" />}\n          placeholder=\"Titulo\"\n          value={menuWebData.title}\n          onChange={e =>\n            setMenuWebData({ ...menuWebData, title: e.target.value })\n          }\n        />\n      </Form.Item>\n      <Form.Item>\n        <Input\n          prefix={<Icon type=\"link\" />}\n          placeholder=\"URL\"\n          value={menuWebData.url}\n          onChange={e =>\n            setMenuWebData({ ...menuWebData, url: e.target.value })\n          }\n        />\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\" className=\"btn-submit\">\n          Actualizar menú\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}