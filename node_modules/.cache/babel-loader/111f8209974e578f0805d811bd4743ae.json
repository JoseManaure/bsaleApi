{"ast":null,"code":"import _slicedToArray from \"/Users/jnanaure87/Desktop/Web_Personal_IC_ConBsaleProductos/web-personal-client-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jnanaure87/Desktop/Web_Personal_IC_ConBsaleProductos/web-personal-client-master/src/components/Admin/Stock/ListStocks/ListStocks.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { List, Button, Icon, Modal as ModalAntd, notification } from \"antd\";\nimport DragSortableList from \"react-drag-sortable\";\nimport Modal from \"../../../Modal\";\nimport AddEditProductForm from \"../AddEditProductForm\";\nimport { getStocksBsaleApi, deleteProductApi } from \"../../../../api/stock\";\nimport \"./ProductstList.scss\";\nconst confirm = ModalAntd.confirm;\nexport default function ListStocks(props) {\n  const stocks = props.stocks,\n        setReloadStocks = props.setReloadStocks;\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        listStocks = _useState2[0],\n        setListStocks = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isVisibleModal = _useState4[0],\n        setIsVisibleModal = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        modalTitle = _useState6[0],\n        setModalTitle = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        modalContent = _useState8[0],\n        setModalContent = _useState8[1];\n\n  useEffect(() => {\n    const listStockArray = [];\n    stocks.forEach(stock => {\n      listStockArray.push({\n        content: React.createElement(Stock, {\n          stock: stock,\n          deleteProduct: deleteProduct,\n          editProductModal: editProductModal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        })\n      });\n    });\n    setListStocks(listStockArray); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [stocks]);\n\n  const addProductModal = () => {\n    setIsVisibleModal(true);\n    setModalTitle(\"Creando nuevo curso\");\n    setModalContent(React.createElement(AddEditProductForm, {\n      setIsVisibleModal: setIsVisibleModal,\n      setReloadStocks: setReloadStocks,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }));\n  };\n\n  const editProductModal = stock => {\n    setIsVisibleModal(true);\n    setModalTitle(\"Actualizando producto\");\n    setModalContent(React.createElement(AddEditProductForm, {\n      setIsVisibleModal: setIsVisibleModal,\n      setReloadStocks: setReloadStocks,\n      stock: stock,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }));\n  };\n\n  const deleteProduct = product => {\n    confirm({\n      title: \"Eliminando product\",\n      content: `¿Estas seguro de que quieres eliminar el product ${product.idProduct}?`,\n      okText: \"Eliminar\",\n      okType: \"danger\",\n      cancelText: \"Cancelar\",\n\n      onOk() {\n        deleteProductApi(product.id).then(response => {\n          const typeNotification = response.code === 200 ? \"success\" : \"warning\";\n          notification[typeNotification]({\n            message: response.message\n          });\n          setReloadProducts(true);\n        }).catch(() => {\n          notification[\"error\"]({\n            message: \"Error del servidor, intentelo más tarde.\"\n          });\n        });\n      }\n\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"courses-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"courses-list__header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    onClick: addProductModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Nuevo producto\")), React.createElement(\"div\", {\n    className: \"courses-list__items\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, listProducts.length === 0 && React.createElement(\"h2\", {\n    style: {\n      textAlign: \"center\",\n      margin: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"No tienes stock creados\"), React.createElement(DragSortableList, {\n    items: listStocks,\n    type: \"vertical\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  })), React.createElement(Modal, {\n    title: modalTitle,\n    isVisible: isVisibleModal,\n    setIsVisible: setIsVisibleModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, modalContent));\n}\n\nfunction Stock(props) {\n  const stock = props.stock,\n        deleteProduct = props.deleteProduct,\n        editProductModal = props.editProductModal;\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        stockData = _useState10[0],\n        setStockData = _useState10[1];\n\n  useEffect(() => {\n    getStocksBsaleApi(stock.id).then(response => {\n      if (response.code !== 200) {\n        notification[\"warning\"]({\n          message: `El producto con el id ${stock.id} no se ha encontrado.`\n        });\n      }\n\n      setStockData(response.data);\n    });\n  }, [stock]);\n\n  if (!stockData) {\n    return null;\n  }\n\n  return React.createElement(List.Item, {\n    actions: [React.createElement(Button, {\n      type: \"primary\",\n      onClick: () => editProductModal(stock),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"danger\",\n      onClick: () => deleteProduct(stock),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }))],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(List.Item.Meta, {\n    title: `${stockData.name} | ID: ${stockData.id}`,\n    description: \"nada aqui\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/jnanaure87/Desktop/Web_Personal_IC_ConBsaleProductos/web-personal-client-master/src/components/Admin/Stock/ListStocks/ListStocks.js"],"names":["React","useState","useEffect","List","Button","Icon","Modal","ModalAntd","notification","DragSortableList","AddEditProductForm","getStocksBsaleApi","deleteProductApi","confirm","ListStocks","props","stocks","setReloadStocks","listStocks","setListStocks","isVisibleModal","setIsVisibleModal","modalTitle","setModalTitle","modalContent","setModalContent","listStockArray","forEach","stock","push","content","deleteProduct","editProductModal","addProductModal","product","title","idProduct","okText","okType","cancelText","onOk","id","then","response","typeNotification","code","message","setReloadProducts","catch","listProducts","length","textAlign","margin","Stock","stockData","setStockData","data","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { List, Button, Icon, Modal as ModalAntd, notification } from \"antd\";\nimport DragSortableList from \"react-drag-sortable\";\nimport Modal from \"../../../Modal\";\nimport AddEditProductForm from \"../AddEditProductForm\";\nimport {\n  getStocksBsaleApi,\n  deleteProductApi,\n} from \"../../../../api/stock\";\n\nimport \"./ProductstList.scss\";\n\nconst { confirm } = ModalAntd;\n\nexport default function ListStocks(props) {\n  const { stocks, setReloadStocks } = props;\n  const [listStocks, setListStocks] = useState([]);\n  const [isVisibleModal, setIsVisibleModal] = useState(false);\n  const [modalTitle, setModalTitle] = useState(\"\");\n  const [modalContent, setModalContent] = useState(null);\n\n  useEffect(() => {\n    const listStockArray = [];\n    stocks.forEach(stock => {\n        listStockArray.push({\n        content: (\n          <Stock\n            stock={stock}\n            deleteProduct={deleteProduct}\n            editProductModal={editProductModal}\n          />\n        )\n      });\n    });\n    setListStocks(listStockArray);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [stocks]);\n\n        \n  const addProductModal = () => {\n    setIsVisibleModal(true);\n    setModalTitle(\"Creando nuevo curso\");\n    setModalContent(\n      <AddEditProductForm\n        setIsVisibleModal={setIsVisibleModal}\n        setReloadStocks={setReloadStocks}\n      />\n    );\n  };\n\n  const editProductModal = stock => {\n    setIsVisibleModal(true);\n    setModalTitle(\"Actualizando producto\");\n    setModalContent(\n      <AddEditProductForm\n        setIsVisibleModal={setIsVisibleModal}\n        setReloadStocks={setReloadStocks}\n        stock={stock}\n      />\n    );\n  };\n\n  const deleteProduct = product => {\n\n    confirm({\n      title: \"Eliminando product\",\n      content: `¿Estas seguro de que quieres eliminar el product ${product.idProduct}?`,\n      okText: \"Eliminar\",\n      okType: \"danger\",\n      cancelText: \"Cancelar\",\n      onOk() {\n        deleteProductApi(product.id)\n          .then(response => {\n            const typeNotification =\n              response.code === 200 ? \"success\" : \"warning\";\n            notification[typeNotification]({\n              message: response.message\n            });\n            setReloadProducts(true);\n          })\n          .catch(() => {\n            notification[\"error\"]({\n              message: \"Error del servidor, intentelo más tarde.\"\n            });\n          });\n      }\n    });\n  };\n\n  return (\n    <div className=\"courses-list\">\n      <div className=\"courses-list__header\">\n        <Button type=\"primary\" onClick={addProductModal}>\n          Nuevo producto\n        </Button>\n      </div>\n\n      <div className=\"courses-list__items\">\n        {listProducts.length === 0 && (\n          <h2 style={{ textAlign: \"center\", margin: 0 }}>\n            No tienes stock creados\n          </h2>\n        )}\n        <DragSortableList items={listStocks}  type=\"vertical\" />\n      </div>\n\n      <Modal\n        title={modalTitle}\n        isVisible={isVisibleModal}\n        setIsVisible={setIsVisibleModal}\n      >\n        {modalContent}\n      </Modal>\n    </div>\n  );\n}\n\nfunction Stock(props) {\n  const { stock, deleteProduct, editProductModal } = props;\n  const [stockData, setStockData] = useState(null);\n\n  useEffect(() => {\n    getStocksBsaleApi(stock.id).then(response => {\n      if (response.code !== 200) {\n        notification[\"warning\"]({\n          message: `El producto con el id ${stock.id} no se ha encontrado.`\n        }); \n      }\n      setStockData(response.data);\n    });\n  }, [stock]);\n\n  if (!stockData) {\n    return null;\n  }\n\n  return (\n    <List.Item\n      actions={[\n        <Button type=\"primary\" onClick={() => editProductModal(stock)}>\n          <Icon type=\"edit\" />\n        </Button>,\n        <Button type=\"danger\" onClick={() => deleteProduct(stock)}>\n          <Icon type=\"delete\" />\n        </Button>\n      ]}\n    >\n      \n      <List.Item.Meta\n        title={`${stockData.name} | ID: ${stockData.id}`}\n        description=\"nada aqui\"\n      />\n    </List.Item>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}