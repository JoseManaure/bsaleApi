{"ast":null,"code":"import { basePath, apiVersion } from \"./config\";\nexport function signUpApi(data) {\n  const url = `${basePath}/${apiVersion}/sign-up`;\n  const params = {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    if (result.user) {\n      return {\n        ok: true,\n        message: \"Usuario creado correctamente\"\n      };\n    }\n\n    return {\n      ok: false,\n      message: result.message\n    };\n  }).catch(err => {\n    return {\n      ok: false,\n      message: err.message\n    };\n  });\n}\nexport function signInApi(data) {\n  const url = `${basePath}/${apiVersion}/sign-in`;\n  const params = {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    console.log(result);\n    return result;\n  }).catch(err => {\n    return err.message;\n  });\n}\nexport function getUsersApi(token) {\n  const url = `${basePath}/${apiVersion}/users`;\n  const params = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    }\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  }).catch(err => {\n    return err.message;\n  });\n}\nexport function getUsersActiveApi(token, status) {\n  const url = `${basePath}/${apiVersion}/users-active?active=${status}`;\n  const params = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    }\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  }).catch(err => {\n    return err.message;\n  });\n}\nexport function uploadAvatarApi(token, avatar, userId) {\n  const url = `${basePath}/${apiVersion}/upload-avatar/${userId}`;\n  const formData = new FormData();\n  formData.append(\"avatar\", avatar, avatar.name);\n  const params = {\n    method: \"PUT\",\n    body: formData,\n    headers: {\n      Authorization: token\n    }\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  }).catch(err => {\n    return err.message;\n  });\n}\nexport function getAvatarApi(avatarName) {\n  const url = `${basePath}/${apiVersion}/get-avatar/${avatarName}`;\n  return fetch(url).then(response => {\n    return response.url;\n  }).catch(err => {\n    return err.message;\n  });\n}\nexport function updateUserApi(token, user, userId) {\n  const url = `${basePath}/${apiVersion}/update-user/${userId}`;\n  const params = {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    },\n    body: JSON.stringify(user)\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  }).catch(err => {\n    return err.message;\n  });\n}\nexport function activateUserApi(token, userId, status) {\n  const url = `${basePath}/${apiVersion}/activate-user/${userId}`;\n  const params = {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    },\n    body: JSON.stringify({\n      active: status\n    })\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result.message;\n  }).catch(err => {\n    return err.message;\n  });\n}\nexport function deleteUserApi(token, userId) {\n  const url = `${basePath}/${apiVersion}/delete-user/${userId}`;\n  const params = {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    }\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result.message;\n  }).catch(err => {\n    return err.message;\n  });\n}\nexport function signUpAdminApi(token, data) {\n  const url = `${basePath}/${apiVersion}/sign-up-admin`;\n  const params = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    },\n    body: JSON.stringify(data)\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result.message;\n  }).catch(err => {\n    return err.message;\n  });\n}","map":{"version":3,"sources":["/Users/jnanaure87/Desktop/Web_Personal_IC_ConBsaleProductos/web-personal-client-master/src/api/user.js"],"names":["basePath","apiVersion","signUpApi","data","url","params","method","body","JSON","stringify","headers","fetch","then","response","json","result","user","ok","message","catch","err","signInApi","console","log","getUsersApi","token","Authorization","getUsersActiveApi","status","uploadAvatarApi","avatar","userId","formData","FormData","append","name","getAvatarApi","avatarName","updateUserApi","activateUserApi","active","deleteUserApi","signUpAdminApi"],"mappings":"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","sourcesContent":["import { basePath, apiVersion } from \"./config\";\n\nexport function signUpApi(data) {\n  const url = `${basePath}/${apiVersion}/sign-up`;\n  const params = {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  return fetch(url, params)\n    .then(response => {\n      return response.json();\n    })\n    .then(result => {\n      if (result.user) {\n        return { ok: true, message: \"Usuario creado correctamente\" };\n      }\n      return { ok: false, message: result.message };\n    })\n    .catch(err => {\n      return { ok: false, message: err.message };\n    });\n}\n\nexport function signInApi(data) {\n  const url = `${basePath}/${apiVersion}/sign-in`;\n  const params = {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  return fetch(url, params)\n    .then(response => {\n      return response.json();\n    })\n    .then(result => {\n      console.log(result);\n\n      return result;\n    })\n    .catch(err => {\n      return err.message;\n    });\n}\n\nexport function getUsersApi(token) {\n  const url = `${basePath}/${apiVersion}/users`;\n\n  const params = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    }\n  };\n\n  return fetch(url, params)\n    .then(response => {\n      return response.json();\n    })\n    .then(result => {\n      return result;\n    })\n    .catch(err => {\n      return err.message;\n    });\n}\n\nexport function getUsersActiveApi(token, status) {\n  const url = `${basePath}/${apiVersion}/users-active?active=${status}`;\n\n  const params = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    }\n  };\n\n  return fetch(url, params)\n    .then(response => {\n      return response.json();\n    })\n    .then(result => {\n      return result;\n    })\n    .catch(err => {\n      return err.message;\n    });\n}\n\nexport function uploadAvatarApi(token, avatar, userId) {\n  const url = `${basePath}/${apiVersion}/upload-avatar/${userId}`;\n\n  const formData = new FormData();\n  formData.append(\"avatar\", avatar, avatar.name);\n\n  const params = {\n    method: \"PUT\",\n    body: formData,\n    headers: {\n      Authorization: token\n    }\n  };\n\n  return fetch(url, params)\n    .then(response => {\n      return response.json();\n    })\n    .then(result => {\n      return result;\n    })\n    .catch(err => {\n      return err.message;\n    });\n}\n\nexport function getAvatarApi(avatarName) {\n  const url = `${basePath}/${apiVersion}/get-avatar/${avatarName}`;\n\n  return fetch(url)\n    .then(response => {\n      return response.url;\n    })\n    .catch(err => {\n      return err.message;\n    });\n}\n\nexport function updateUserApi(token, user, userId) {\n  const url = `${basePath}/${apiVersion}/update-user/${userId}`;\n\n  const params = {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    },\n    body: JSON.stringify(user)\n  };\n\n  return fetch(url, params)\n    .then(response => {\n      return response.json();\n    })\n    .then(result => {\n      return result;\n    })\n    .catch(err => {\n      return err.message;\n    });\n}\n\nexport function activateUserApi(token, userId, status) {\n  const url = `${basePath}/${apiVersion}/activate-user/${userId}`;\n\n  const params = {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    },\n    body: JSON.stringify({\n      active: status\n    })\n  };\n\n  return fetch(url, params)\n    .then(response => {\n      return response.json();\n    })\n    .then(result => {\n      return result.message;\n    })\n    .catch(err => {\n      return err.message;\n    });\n}\n\nexport function deleteUserApi(token, userId) {\n  const url = `${basePath}/${apiVersion}/delete-user/${userId}`;\n\n  const params = {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    }\n  };\n\n  return fetch(url, params)\n    .then(response => {\n      return response.json();\n    })\n    .then(result => {\n      return result.message;\n    })\n    .catch(err => {\n      return err.message;\n    });\n}\n\nexport function signUpAdminApi(token, data) {\n  const url = `${basePath}/${apiVersion}/sign-up-admin`;\n\n  const params = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    },\n    body: JSON.stringify(data)\n  };\n\n  return fetch(url, params)\n    .then(response => {\n      return response.json();\n    })\n    .then(result => {\n      return result.message;\n    })\n    .catch(err => {\n      return err.message;\n    });\n}\n"]},"metadata":{},"sourceType":"module"}