{"ast":null,"code":"import _slicedToArray from \"/Users/jnanaure87/Desktop/Web_Personal_IC_ConBsaleProductos/web-personal-client-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jnanaure87/Desktop/Web_Personal_IC_ConBsaleProductos/web-personal-client-master/src/components/Admin/Courses/CoursesList/CoursesList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { List, Button, Icon, Modal as ModalAntd, notification } from \"antd\";\nimport DragSortableList from \"react-drag-sortable\";\nimport Modal from \"../../../Modal\";\nimport AddEditCourseForm from \"../AddEditCourseForm\";\nimport { getAccessTokenApi } from \"../../../../api/auth\";\nimport { getCourseDataUdemyApi, deleteCourseApi, updateCourseApi } from \"../../../../api/course\";\nimport \"./CoursesList.scss\";\nconst confirm = ModalAntd.confirm;\nexport default function CoursesList(props) {\n  const courses = props.courses,\n        setReloadCourses = props.setReloadCourses;\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        listCourses = _useState2[0],\n        setListCourses = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isVisibleModal = _useState4[0],\n        setIsVisibleModal = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        modalTitle = _useState6[0],\n        setModalTitle = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        modalContent = _useState8[0],\n        setModalContent = _useState8[1];\n\n  useEffect(() => {\n    const listCourseArray = [];\n    courses.forEach(course => {\n      listCourseArray.push({\n        content: React.createElement(Course, {\n          course: course,\n          deleteCourse: deleteCourse,\n          editCourseModal: editCourseModal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        })\n      });\n    });\n    setListCourses(listCourseArray); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [courses]);\n\n  const onSort = (sortedList, dropEvent) => {\n    const accessToken = getAccessTokenApi();\n    sortedList.forEach(item => {\n      const _id = item.content.props.course._id;\n      const order = item.rank;\n      updateCourseApi(accessToken, _id, {\n        order\n      });\n    });\n  };\n\n  const addCourseModal = () => {\n    setIsVisibleModal(true);\n    setModalTitle(\"Creando nuevo curso\");\n    setModalContent(React.createElement(AddEditCourseForm, {\n      setIsVisibleModal: setIsVisibleModal,\n      setReloadCourses: setReloadCourses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }));\n  };\n\n  const editCourseModal = course => {\n    setIsVisibleModal(true);\n    setModalTitle(\"Actualizando curso\");\n    setModalContent(React.createElement(AddEditCourseForm, {\n      setIsVisibleModal: setIsVisibleModal,\n      setReloadCourses: setReloadCourses,\n      course: course,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }));\n  };\n\n  const deleteCourse = course => {\n    const accesToken = getAccessTokenApi();\n    confirm({\n      title: \"Eliminando curso\",\n      content: `¿Estas seguro de que quieres eliminar el curso ${course.idCourse}?`,\n      okText: \"Eliminar\",\n      okType: \"danger\",\n      cancelText: \"Cancelar\",\n\n      onOk() {\n        deleteCourseApi(accesToken, course._id).then(response => {\n          const typeNotification = response.code === 200 ? \"success\" : \"warning\";\n          notification[typeNotification]({\n            message: response.message\n          });\n          setReloadCourses(true);\n        }).catch(() => {\n          notification[\"error\"]({\n            message: \"Error del servidor, intentelo más tarde.\"\n          });\n        });\n      }\n\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"courses-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"courses-list__header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    onClick: addCourseModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Nuevo curso\")), React.createElement(\"div\", {\n    className: \"courses-list__items\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, listCourses.length === 0 && React.createElement(\"h2\", {\n    style: {\n      textAlign: \"center\",\n      margin: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"No tienes cursos creados\"), React.createElement(DragSortableList, {\n    items: listCourses,\n    onSort: onSort,\n    type: \"vertical\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })), React.createElement(Modal, {\n    title: modalTitle,\n    isVisible: isVisibleModal,\n    setIsVisible: setIsVisibleModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, modalContent));\n}\n\nfunction Course(props) {\n  const course = props.course,\n        deleteCourse = props.deleteCourse,\n        editCourseModal = props.editCourseModal;\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        courseData = _useState10[0],\n        setCourseData = _useState10[1];\n\n  useEffect(() => {\n    getCourseDataUdemyApi(course.idCourse).then(response => {\n      if (response.code !== 200) {\n        notification[\"warning\"]({\n          message: `El curso con el id ${course.idCourse} no se ha encontrado.`\n        });\n      }\n\n      setCourseData(response.data);\n    });\n  }, [course]);\n\n  if (!courseData) {\n    return null;\n  }\n\n  return React.createElement(List.Item, {\n    actions: [React.createElement(Button, {\n      type: \"primary\",\n      onClick: () => editCourseModal(course),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"danger\",\n      onClick: () => deleteCourse(course),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }))],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: courseData.image_480x270,\n    alt: courseData.title,\n    style: {\n      width: \"100px\",\n      marginRight: \"20px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }), React.createElement(List.Item.Meta, {\n    title: `${courseData.title} | ID: ${course.idCourse}`,\n    description: courseData.headline,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/jnanaure87/Desktop/Web_Personal_IC_ConBsaleProductos/web-personal-client-master/src/components/Admin/Courses/CoursesList/CoursesList.js"],"names":["React","useState","useEffect","List","Button","Icon","Modal","ModalAntd","notification","DragSortableList","AddEditCourseForm","getAccessTokenApi","getCourseDataUdemyApi","deleteCourseApi","updateCourseApi","confirm","CoursesList","props","courses","setReloadCourses","listCourses","setListCourses","isVisibleModal","setIsVisibleModal","modalTitle","setModalTitle","modalContent","setModalContent","listCourseArray","forEach","course","push","content","deleteCourse","editCourseModal","onSort","sortedList","dropEvent","accessToken","item","_id","order","rank","addCourseModal","accesToken","title","idCourse","okText","okType","cancelText","onOk","then","response","typeNotification","code","message","catch","length","textAlign","margin","Course","courseData","setCourseData","data","image_480x270","width","marginRight","headline"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { List, Button, Icon, Modal as ModalAntd, notification } from \"antd\";\nimport DragSortableList from \"react-drag-sortable\";\nimport Modal from \"../../../Modal\";\nimport AddEditCourseForm from \"../AddEditCourseForm\";\nimport { getAccessTokenApi } from \"../../../../api/auth\";\nimport {\n  getCourseDataUdemyApi,\n  deleteCourseApi,\n  updateCourseApi\n} from \"../../../../api/course\";\n\nimport \"./CoursesList.scss\";\n\nconst { confirm } = ModalAntd;\n\nexport default function CoursesList(props) {\n  const { courses, setReloadCourses } = props;\n  const [listCourses, setListCourses] = useState([]);\n  const [isVisibleModal, setIsVisibleModal] = useState(false);\n  const [modalTitle, setModalTitle] = useState(\"\");\n  const [modalContent, setModalContent] = useState(null);\n\n  useEffect(() => {\n    const listCourseArray = [];\n    courses.forEach(course => {\n      listCourseArray.push({\n        content: (\n          <Course\n            course={course}\n            deleteCourse={deleteCourse}\n            editCourseModal={editCourseModal}\n          />\n        )\n      });\n    });\n    setListCourses(listCourseArray);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [courses]);\n\n  const onSort = (sortedList, dropEvent) => {\n    const accessToken = getAccessTokenApi();\n\n    sortedList.forEach(item => {\n      const { _id } = item.content.props.course;\n      const order = item.rank;\n      updateCourseApi(accessToken, _id, { order });\n    });\n  };\n\n  const addCourseModal = () => {\n    setIsVisibleModal(true);\n    setModalTitle(\"Creando nuevo curso\");\n    setModalContent(\n      <AddEditCourseForm\n        setIsVisibleModal={setIsVisibleModal}\n        setReloadCourses={setReloadCourses}\n      />\n    );\n  };\n\n  const editCourseModal = course => {\n    setIsVisibleModal(true);\n    setModalTitle(\"Actualizando curso\");\n    setModalContent(\n      <AddEditCourseForm\n        setIsVisibleModal={setIsVisibleModal}\n        setReloadCourses={setReloadCourses}\n        course={course}\n      />\n    );\n  };\n\n  const deleteCourse = course => {\n    const accesToken = getAccessTokenApi();\n\n    confirm({\n      title: \"Eliminando curso\",\n      content: `¿Estas seguro de que quieres eliminar el curso ${course.idCourse}?`,\n      okText: \"Eliminar\",\n      okType: \"danger\",\n      cancelText: \"Cancelar\",\n      onOk() {\n        deleteCourseApi(accesToken, course._id)\n          .then(response => {\n            const typeNotification =\n              response.code === 200 ? \"success\" : \"warning\";\n            notification[typeNotification]({\n              message: response.message\n            });\n            setReloadCourses(true);\n          })\n          .catch(() => {\n            notification[\"error\"]({\n              message: \"Error del servidor, intentelo más tarde.\"\n            });\n          });\n      }\n    });\n  };\n\n  return (\n    <div className=\"courses-list\">\n      <div className=\"courses-list__header\">\n        <Button type=\"primary\" onClick={addCourseModal}>\n          Nuevo curso\n        </Button>\n      </div>\n\n      <div className=\"courses-list__items\">\n        {listCourses.length === 0 && (\n          <h2 style={{ textAlign: \"center\", margin: 0 }}>\n            No tienes cursos creados\n          </h2>\n        )}\n        <DragSortableList items={listCourses} onSort={onSort} type=\"vertical\" />\n      </div>\n\n      <Modal\n        title={modalTitle}\n        isVisible={isVisibleModal}\n        setIsVisible={setIsVisibleModal}\n      >\n        {modalContent}\n      </Modal>\n    </div>\n  );\n}\n\nfunction Course(props) {\n  const { course, deleteCourse, editCourseModal } = props;\n  const [courseData, setCourseData] = useState(null);\n\n  useEffect(() => {\n    getCourseDataUdemyApi(course.idCourse).then(response => {\n      if (response.code !== 200) {\n        notification[\"warning\"]({\n          message: `El curso con el id ${course.idCourse} no se ha encontrado.`\n        });\n      }\n      setCourseData(response.data);\n    });\n  }, [course]);\n\n  if (!courseData) {\n    return null;\n  }\n\n  return (\n    <List.Item\n      actions={[\n        <Button type=\"primary\" onClick={() => editCourseModal(course)}>\n          <Icon type=\"edit\" />\n        </Button>,\n        <Button type=\"danger\" onClick={() => deleteCourse(course)}>\n          <Icon type=\"delete\" />\n        </Button>\n      ]}\n    >\n      <img\n        src={courseData.image_480x270}\n        alt={courseData.title}\n        style={{ width: \"100px\", marginRight: \"20px\" }}\n      />\n      <List.Item.Meta\n        title={`${courseData.title} | ID: ${course.idCourse}`}\n        description={courseData.headline}\n      />\n    </List.Item>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}