{"ast":null,"code":"import _objectSpread from \"/Users/jnanaure87/Desktop/Web_Personal_IC_ConBsaleProductos/web-personal-client-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/jnanaure87/Desktop/Web_Personal_IC_ConBsaleProductos/web-personal-client-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jnanaure87/Desktop/Web_Personal_IC_ConBsaleProductos/web-personal-client-master/src/components/Admin/Blog/AddEditPostForm/AddEditPostForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Row, Col, Form, Icon, Input, Button, DatePicker, notification } from \"antd\";\nimport moment from \"moment\";\nimport { Editor } from \"@tinymce/tinymce-react\";\nimport { getAccessTokenApi } from \"../../../../api/auth\";\nimport { addPostApi, updatePostApi } from \"../../../../api/post\";\nimport \"./AddEditPostForm.scss\";\nexport default function AddEditPostForm(props) {\n  const setIsVisibleModal = props.setIsVisibleModal,\n        setReloadPosts = props.setReloadPosts,\n        post = props.post;\n\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        postData = _useState2[0],\n        setPostData = _useState2[1];\n\n  useEffect(() => {\n    if (post) {\n      setPostData(post);\n    } else {\n      setPostData({});\n    }\n  }, [post]);\n\n  const processPost = e => {\n    e.preventDefault();\n    const title = postData.title,\n          url = postData.url,\n          description = postData.description,\n          date = postData.date;\n\n    if (!title || !url || !description || !date) {\n      notification[\"error\"]({\n        message: \"Todos los campos son obligatorios.\"\n      });\n    } else {\n      if (!post) {\n        addPost();\n      } else {\n        updatePost();\n      }\n    }\n  };\n\n  const addPost = () => {\n    const token = getAccessTokenApi();\n    addPostApi(token, postData).then(response => {\n      const typeNotification = response.code === 200 ? \"success\" : \"warning\";\n      notification[typeNotification]({\n        message: response.message\n      });\n      setIsVisibleModal(false);\n      setReloadPosts(true);\n      setPostData({});\n    }).catch(() => {\n      notification[\"error\"]({\n        message: \"Error del servidor.\"\n      });\n    });\n  };\n\n  const updatePost = () => {\n    const token = getAccessTokenApi();\n    updatePostApi(token, post._id, postData).then(response => {\n      const typeNotification = response.code === 200 ? \"success\" : \"warning\";\n      notification[typeNotification]({\n        message: response.message\n      });\n      setIsVisibleModal(false);\n      setReloadPosts(true);\n      setPostData({});\n    }).catch(() => {\n      notification[\"error\"]({\n        message: \"Error del servidor.\"\n      });\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"add-edit-post-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(AddEditForm, {\n    postData: postData,\n    setPostData: setPostData,\n    post: post,\n    processPost: processPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }));\n}\n\nfunction AddEditForm(props) {\n  const postData = props.postData,\n        setPostData = props.setPostData,\n        post = props.post,\n        processPost = props.processPost;\n  return React.createElement(Form, {\n    className: \"add-edit-post-form\",\n    layout: \"inline\",\n    onSubmit: processPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Row, {\n    gutter: 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Col, {\n    span: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Input, {\n    prefix: React.createElement(Icon, {\n      type: \"font-size\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }),\n    placeholder: \"Titulo\",\n    value: postData.title,\n    onChange: e => setPostData(_objectSpread({}, postData, {\n      title: e.target.value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  })), React.createElement(Col, {\n    span: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Input, {\n    prefix: React.createElement(Icon, {\n      type: \"link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }),\n    placeholder: \"url\",\n    value: postData.url,\n    onChange: e => setPostData(_objectSpread({}, postData, {\n      url: transformTextToUrl(e.target.value)\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })), React.createElement(Col, {\n    span: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(DatePicker, {\n    style: {\n      width: \"100%\"\n    },\n    format: \"DD/MM/YYYY HH:mm:ss\",\n    placeholder: \"Fecha de publicaci\\xF3n\",\n    value: postData.date && moment(postData.date),\n    onChange: (e, value) => setPostData(_objectSpread({}, postData, {\n      date: moment(value, \"DD/MM/YYYY HH:mm:ss\").toISOString()\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }))), React.createElement(Editor, {\n    value: postData.description ? postData.description : \"\",\n    init: {\n      height: 400,\n      menubar: true,\n      plugins: [\"advlist autolink lists link image charmap print preview anchor\", \"searchreplace visualblocks code fullscreen\", \"insertdatetime media table paste code help wordcount\"],\n      toolbar: \"undo redo | formatselect | bold italic backcolor | \\\n             alignleft aligncenter alignright alignjustify | \\\n             bullist numlist outdent indent | removeformat | help\"\n    },\n    onBlur: e => setPostData(_objectSpread({}, postData, {\n      description: e.target.getContent()\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    className: \"btn-submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, post ? \"Actualizar post\" : \"Crear post\"));\n}\n\nfunction transformTextToUrl(text) {\n  const url = text.replace(\" \", \"-\");\n  return url.toLowerCase();\n}","map":{"version":3,"sources":["/Users/jnanaure87/Desktop/Web_Personal_IC_ConBsaleProductos/web-personal-client-master/src/components/Admin/Blog/AddEditPostForm/AddEditPostForm.js"],"names":["React","useState","useEffect","Row","Col","Form","Icon","Input","Button","DatePicker","notification","moment","Editor","getAccessTokenApi","addPostApi","updatePostApi","AddEditPostForm","props","setIsVisibleModal","setReloadPosts","post","postData","setPostData","processPost","e","preventDefault","title","url","description","date","message","addPost","updatePost","token","then","response","typeNotification","code","catch","_id","AddEditForm","target","value","transformTextToUrl","width","toISOString","height","menubar","plugins","toolbar","getContent","text","replace","toLowerCase"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Row,\n  Col,\n  Form,\n  Icon,\n  Input,\n  Button,\n  DatePicker,\n  notification\n} from \"antd\";\nimport moment from \"moment\";\nimport { Editor } from \"@tinymce/tinymce-react\";\nimport { getAccessTokenApi } from \"../../../../api/auth\";\nimport { addPostApi, updatePostApi } from \"../../../../api/post\";\n\nimport \"./AddEditPostForm.scss\";\n\nexport default function AddEditPostForm(props) {\n  const { setIsVisibleModal, setReloadPosts, post } = props;\n  const [postData, setPostData] = useState({});\n\n  useEffect(() => {\n    if (post) {\n      setPostData(post);\n    } else {\n      setPostData({});\n    }\n  }, [post]);\n\n  const processPost = e => {\n    e.preventDefault();\n    const { title, url, description, date } = postData;\n\n    if (!title || !url || !description || !date) {\n      notification[\"error\"]({\n        message: \"Todos los campos son obligatorios.\"\n      });\n    } else {\n      if (!post) {\n        addPost();\n      } else {\n        updatePost();\n      }\n    }\n  };\n\n  const addPost = () => {\n    const token = getAccessTokenApi();\n\n    addPostApi(token, postData)\n      .then(response => {\n        const typeNotification = response.code === 200 ? \"success\" : \"warning\";\n        notification[typeNotification]({\n          message: response.message\n        });\n        setIsVisibleModal(false);\n        setReloadPosts(true);\n        setPostData({});\n      })\n      .catch(() => {\n        notification[\"error\"]({\n          message: \"Error del servidor.\"\n        });\n      });\n  };\n\n  const updatePost = () => {\n    const token = getAccessTokenApi();\n    updatePostApi(token, post._id, postData)\n      .then(response => {\n        const typeNotification = response.code === 200 ? \"success\" : \"warning\";\n        notification[typeNotification]({\n          message: response.message\n        });\n        setIsVisibleModal(false);\n        setReloadPosts(true);\n        setPostData({});\n      })\n      .catch(() => {\n        notification[\"error\"]({\n          message: \"Error del servidor.\"\n        });\n      });\n  };\n\n  return (\n    <div className=\"add-edit-post-form\">\n      <AddEditForm\n        postData={postData}\n        setPostData={setPostData}\n        post={post}\n        processPost={processPost}\n      />\n    </div>\n  );\n}\n\nfunction AddEditForm(props) {\n  const { postData, setPostData, post, processPost } = props;\n\n  return (\n    <Form className=\"add-edit-post-form\" layout=\"inline\" onSubmit={processPost}>\n      <Row gutter={24}>\n        <Col span={8}>\n          <Input\n            prefix={<Icon type=\"font-size\" />}\n            placeholder=\"Titulo\"\n            value={postData.title}\n            onChange={e => setPostData({ ...postData, title: e.target.value })}\n          />\n        </Col>\n        <Col span={8}>\n          <Input\n            prefix={<Icon type=\"link\" />}\n            placeholder=\"url\"\n            value={postData.url}\n            onChange={e =>\n              setPostData({\n                ...postData,\n                url: transformTextToUrl(e.target.value)\n              })\n            }\n          />\n        </Col>\n        <Col span={8}>\n          <DatePicker\n            style={{ width: \"100%\" }}\n            format=\"DD/MM/YYYY HH:mm:ss\"\n            placeholder=\"Fecha de publicación\"\n            value={postData.date && moment(postData.date)}\n            onChange={(e, value) =>\n              setPostData({\n                ...postData,\n                date: moment(value, \"DD/MM/YYYY HH:mm:ss\").toISOString()\n              })\n            }\n          />\n        </Col>\n      </Row>\n\n      <Editor\n        value={postData.description ? postData.description : \"\"}\n        init={{\n          height: 400,\n          menubar: true,\n          plugins: [\n            \"advlist autolink lists link image charmap print preview anchor\",\n            \"searchreplace visualblocks code fullscreen\",\n            \"insertdatetime media table paste code help wordcount\"\n          ],\n          toolbar:\n            \"undo redo | formatselect | bold italic backcolor | \\\n             alignleft aligncenter alignright alignjustify | \\\n             bullist numlist outdent indent | removeformat | help\"\n        }}\n        onBlur={e =>\n          setPostData({ ...postData, description: e.target.getContent() })\n        }\n      />\n\n      <Button type=\"primary\" htmlType=\"submit\" className=\"btn-submit\">\n        {post ? \"Actualizar post\" : \"Crear post\"}\n      </Button>\n    </Form>\n  );\n}\n\nfunction transformTextToUrl(text) {\n  const url = text.replace(\" \", \"-\");\n  return url.toLowerCase();\n}\n"]},"metadata":{},"sourceType":"module"}