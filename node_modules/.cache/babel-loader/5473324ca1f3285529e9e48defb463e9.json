{"ast":null,"code":"import { basePath, apiVersion } from \"./config\";\nexport function getCoursesApi() {\n  const url = `${basePath}/${apiVersion}/get-courses`;\n  return fetch(url).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  }).catch(err => {\n    return err;\n  });\n}\nexport function getCourseDataUdemyApi(id) {\n  const baseUrl = `https://www.udemy.com/api-2.0/courses/${id}`;\n  const coursesParams = ` ?fields=[name,ledgeraccount,description]`;\n  const url = baseUrl + coursesParams;\n  return fetch(url).then(async response => {\n    return {\n      code: response.status,\n      data: await response.json()\n    };\n  }).then(result => {\n    return result;\n  }).catch(err => {\n    return err;\n  });\n}\nexport function deleteCourseApi(token, id) {\n  const url = `${basePath}/${apiVersion}/delete-course/${id}`;\n  const params = {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    }\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  }).catch(err => {\n    return err;\n  });\n}\nexport function addCourseApi(token, course) {\n  const url = `${basePath}/${apiVersion}/add-course`;\n  const params = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    },\n    body: JSON.stringify(course)\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  }).catch(err => {\n    return err;\n  });\n}\nexport function updateCourseApi(token, id, data) {\n  const url = `${basePath}/${apiVersion}/update-course/${id}`;\n  const params = {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    },\n    body: JSON.stringify(data)\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  }).catch(err => {\n    return err;\n  });\n}","map":{"version":3,"sources":["/Users/jnanaure87/Desktop/Web_Personal_IC_ConBsaleProductos/web-personal-client-master/src/api/course.js"],"names":["basePath","apiVersion","getCoursesApi","url","fetch","then","response","json","result","catch","err","getCourseDataUdemyApi","id","baseUrl","coursesParams","code","status","data","deleteCourseApi","token","params","method","headers","Authorization","addCourseApi","course","body","JSON","stringify","updateCourseApi"],"mappings":"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","sourcesContent":["import { basePath, apiVersion } from \"./config\";\n\nexport function getCoursesApi() {\n  const url = `${basePath}/${apiVersion}/get-courses`;\n\n  return fetch(url)\n    .then(response => {\n      return response.json();\n    })\n    .then(result => {\n      return result;\n    })\n    .catch(err => {\n      return err;\n    });\n}\n\nexport function getCourseDataUdemyApi(id) {\n  const baseUrl = `https://www.udemy.com/api-2.0/courses/${id}`;\n  const coursesParams = ` ?fields=[name,ledgeraccount,description]`;\n  const url = baseUrl + coursesParams;\n \n  return fetch(url)\n    .then(async response => {\n      return { code: response.status, data: await response.json() };\n    })\n    .then(result => {\n      return result;\n    })\n    .catch(err => {\n      return err;\n    });\n}\n\nexport function deleteCourseApi(token, id) {\n  const url = `${basePath}/${apiVersion}/delete-course/${id}`;\n\n  const params = {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    }\n  };\n\n  return fetch(url, params)\n    .then(response => {\n      return response.json();\n    })\n    .then(result => {\n      return result;\n    })\n    .catch(err => {\n      return err;\n    });\n}\n\nexport function addCourseApi(token, course) {\n  const url = `${basePath}/${apiVersion}/add-course`;\n\n  const params = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    },\n    body: JSON.stringify(course)\n  };\n\n  return fetch(url, params)\n    .then(response => {\n      return response.json();\n    })\n    .then(result => {\n      return result;\n    })\n    .catch(err => {\n      return err;\n    });\n}\n\nexport function updateCourseApi(token, id, data) {\n  const url = `${basePath}/${apiVersion}/update-course/${id}`;\n\n  const params = {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    },\n    body: JSON.stringify(data)\n  };\n\n  return fetch(url, params)\n    .then(response => {\n      return response.json();\n    })\n    .then(result => {\n      return result;\n    })\n    .catch(err => {\n      return err;\n    });\n}\n"]},"metadata":{},"sourceType":"module"}