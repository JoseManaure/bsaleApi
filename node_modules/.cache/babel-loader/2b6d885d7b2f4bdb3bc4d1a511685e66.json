{"ast":null,"code":"import _slicedToArray from \"/Users/jnanaure87/Desktop/Web_Personal_IC_ConBsaleProductos/web-personal-client-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jnanaure87/Desktop/Web_Personal_IC_ConBsaleProductos/web-personal-client-master/src/components/Web/Blog/PostsListWeb/PostsListWeb.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Spin, List, notification } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport moment from \"moment\";\nimport queryString from \"query-string\";\nimport Pagination from \"../../../Pagination\";\nimport { getPostsApi } from \"../../../../api/post\";\nimport \"moment/locale/es\";\nimport \"./PostsListWeb.scss\";\nexport default function PostsListWeb(props) {\n  const location = props.location,\n        history = props.history;\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        posts = _useState2[0],\n        setPosts = _useState2[1];\n\n  const _queryString$parse = queryString.parse(location.search),\n        _queryString$parse$pa = _queryString$parse.page,\n        page = _queryString$parse$pa === void 0 ? 1 : _queryString$parse$pa;\n\n  useEffect(() => {\n    getPostsApi(12, page).then(response => {\n      if ((response === null || response === void 0 ? void 0 : response.code) !== 200) {\n        notification[\"warning\"]({\n          message: response.message\n        });\n      } else {\n        setPosts(response.posts);\n      }\n    }).catch(() => {\n      notification[\"error\"]({\n        message: \"Error del servidor.\"\n      });\n    });\n  }, [page]);\n\n  if (!posts) {\n    return React.createElement(Spin, {\n      tip: \"Cargando\",\n      style: {\n        width: \"100%\",\n        padding: \"200px 0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Helmet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Blog de programaci\\xF3n | Agust\\xEDn Navarro Galdon\")), React.createElement(\"div\", {\n    className: \"posts-list-web\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Blog\"), React.createElement(List, {\n    dataSource: posts.docs,\n    renderItem: post => React.createElement(Post, {\n      post: post,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(Pagination, {\n    posts: posts,\n    location: location,\n    history: history,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })));\n}\n\nfunction Post(props) {\n  const post = props.post;\n  const day = moment(post.date).format(\"DD\");\n  const month = moment(post.date).format(\"MMMM\");\n  return React.createElement(List.Item, {\n    className: \"post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"post__date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, day), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, month)), React.createElement(Link, {\n    to: `blog/${post.url}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(List.Item.Meta, {\n    title: post.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/jnanaure87/Desktop/Web_Personal_IC_ConBsaleProductos/web-personal-client-master/src/components/Web/Blog/PostsListWeb/PostsListWeb.js"],"names":["React","useState","useEffect","Spin","List","notification","Link","Helmet","moment","queryString","Pagination","getPostsApi","PostsListWeb","props","location","history","posts","setPosts","parse","search","page","then","response","code","message","catch","width","padding","docs","post","Post","day","date","format","month","url","title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Spin, List, notification } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport moment from \"moment\";\nimport queryString from \"query-string\";\nimport Pagination from \"../../../Pagination\";\nimport { getPostsApi } from \"../../../../api/post\";\nimport \"moment/locale/es\";\n\nimport \"./PostsListWeb.scss\";\n\nexport default function PostsListWeb(props) {\n  const { location, history } = props;\n  const [posts, setPosts] = useState(null);\n  const { page = 1 } = queryString.parse(location.search);\n\n  useEffect(() => {\n    getPostsApi(12, page)\n      .then(response => {\n        if (response?.code !== 200) {\n          notification[\"warning\"]({\n            message: response.message\n          });\n        } else {\n          setPosts(response.posts);\n        }\n      })\n      .catch(() => {\n        notification[\"error\"]({\n          message: \"Error del servidor.\"\n        });\n      });\n  }, [page]);\n\n  if (!posts) {\n    return (\n      <Spin tip=\"Cargando\" style={{ width: \"100%\", padding: \"200px 0\" }} />\n    );\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>Blog de programación | Agustín Navarro Galdon</title>\n      </Helmet>\n      <div className=\"posts-list-web\">\n        <h1>Blog</h1>\n        <List\n          dataSource={posts.docs}\n          renderItem={post => <Post post={post} />}\n        />\n        <Pagination posts={posts} location={location} history={history} />\n      </div>\n    </>\n  );\n}\n\nfunction Post(props) {\n  const { post } = props;\n  const day = moment(post.date).format(\"DD\");\n  const month = moment(post.date).format(\"MMMM\");\n\n  return (\n    <List.Item className=\"post\">\n      <div className=\"post__date\">\n        <span>{day}</span>\n        <span>{month}</span>\n      </div>\n      <Link to={`blog/${post.url}`}>\n        <List.Item.Meta title={post.title} />\n      </Link>\n    </List.Item>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}