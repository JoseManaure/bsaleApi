{"ast":null,"code":"import _slicedToArray from \"/Users/jnanaure87/Desktop/Web_Personal_IC_ConBsaleProductos/web-personal-client-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jnanaure87/Desktop/Web_Personal_IC_ConBsaleProductos/web-personal-client-master/src/components/Admin/MenuWeb/MenuWebList/MenuWebList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Switch, List, Button, Icon, Modal as ModalAntd, notification } from \"antd\";\nimport Modal from \"../../../Modal\";\nimport DragSortableList from \"react-drag-sortable\";\nimport { updateMenuApi, activateMenuApi, deleteMenuApi } from \"../../../../api/menu\";\nimport { getAccessTokenApi } from \"../../../../api/auth\";\nimport AddMenuWebForm from \"../AddMenuWebForm\";\nimport EditMenuWebForm from \"../EditMenuWebForm\";\nimport \"./MenuWebList.scss\";\nconst confirm = ModalAntd.confirm;\nexport default function MenuWebList(props) {\n  const menu = props.menu,\n        setReloadMenuWeb = props.setReloadMenuWeb;\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        listItems = _useState2[0],\n        setListItems = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isVisibleModal = _useState4[0],\n        setIsVisibleModal = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        modalTitle = _useState6[0],\n        setModalTitle = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        modalContent = _useState8[0],\n        setModalContent = _useState8[1];\n\n  useEffect(() => {\n    const listItemsArray = [];\n    menu.forEach(item => {\n      listItemsArray.push({\n        content: React.createElement(MenuItem, {\n          item: item,\n          activateMenu: activateMenu,\n          editMenuWebModal: editMenuWebModal,\n          deleteMenu: deleteMenu,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        })\n      });\n    });\n    setListItems(listItemsArray); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [menu]);\n\n  const activateMenu = (menu, status) => {\n    const accesToken = getAccessTokenApi();\n    activateMenuApi(accesToken, menu._id, status).then(response => {\n      notification[\"success\"]({\n        message: response\n      });\n    });\n  };\n\n  const onSort = (sortedList, dropEvent) => {\n    const accesToken = getAccessTokenApi();\n    sortedList.forEach(item => {\n      const _id = item.content.props.item._id;\n      const order = item.rank;\n      updateMenuApi(accesToken, _id, {\n        order\n      });\n    });\n  };\n\n  const addMenuWebModal = () => {\n    setIsVisibleModal(true);\n    setModalTitle(\"Creando nuevo menú\");\n    setModalContent(React.createElement(AddMenuWebForm, {\n      setIsVisibleModal: setIsVisibleModal,\n      setReloadMenuWeb: setReloadMenuWeb,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }));\n  };\n\n  const deleteMenu = menu => {\n    const accesToken = getAccessTokenApi();\n    confirm({\n      title: \"Eliminando menu\",\n      content: `¿Estas seguro de que quieres eliminar el menu ${menu.title}?`,\n      okText: \"Eliminar\",\n      okType: \"danger\",\n      cancelText: \"Cancelar\",\n\n      onOk() {\n        deleteMenuApi(accesToken, menu._id).then(response => {\n          notification[\"success\"]({\n            message: response\n          });\n          setReloadMenuWeb(true);\n        }).catch(() => {\n          notification[\"error\"]({\n            message: \"Error del servidor, intentelo más tarde.\"\n          });\n        });\n      }\n\n    });\n  };\n\n  const editMenuWebModal = menu => {\n    setIsVisibleModal(true);\n    setModalTitle(`Editando menu: ${menu.title}`);\n    setModalContent(React.createElement(EditMenuWebForm, {\n      setIsVisibleModal: setIsVisibleModal,\n      setReloadMenuWeb: setReloadMenuWeb,\n      menu: menu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"menu-web-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"menu-web-list__header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    onClick: addMenuWebModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Crear men\\xFA\")), React.createElement(\"div\", {\n    className: \"menu-web-list__items\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(DragSortableList, {\n    items: listItems,\n    onSort: onSort,\n    type: \"vertical\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  })), React.createElement(Modal, {\n    title: modalTitle,\n    isVisible: isVisibleModal,\n    setIsVisible: setIsVisibleModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, modalContent));\n}\n\nfunction MenuItem(props) {\n  const item = props.item,\n        activateMenu = props.activateMenu,\n        editMenuWebModal = props.editMenuWebModal,\n        deleteMenu = props.deleteMenu;\n  return React.createElement(List.Item, {\n    actions: [React.createElement(Switch, {\n      defaultChecked: item.active,\n      onChange: e => activateMenu(item, e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      onClick: () => editMenuWebModal(item),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"danger\",\n      onClick: () => deleteMenu(item),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }))],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(List.Item.Meta, {\n    title: item.title,\n    description: item.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/jnanaure87/Desktop/Web_Personal_IC_ConBsaleProductos/web-personal-client-master/src/components/Admin/MenuWeb/MenuWebList/MenuWebList.js"],"names":["React","useState","useEffect","Switch","List","Button","Icon","Modal","ModalAntd","notification","DragSortableList","updateMenuApi","activateMenuApi","deleteMenuApi","getAccessTokenApi","AddMenuWebForm","EditMenuWebForm","confirm","MenuWebList","props","menu","setReloadMenuWeb","listItems","setListItems","isVisibleModal","setIsVisibleModal","modalTitle","setModalTitle","modalContent","setModalContent","listItemsArray","forEach","item","push","content","activateMenu","editMenuWebModal","deleteMenu","status","accesToken","_id","then","response","message","onSort","sortedList","dropEvent","order","rank","addMenuWebModal","title","okText","okType","cancelText","onOk","catch","MenuItem","active","e","url"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Switch,\n  List,\n  Button,\n  Icon,\n  Modal as ModalAntd,\n  notification\n} from \"antd\";\nimport Modal from \"../../../Modal\";\nimport DragSortableList from \"react-drag-sortable\";\nimport {\n  updateMenuApi,\n  activateMenuApi,\n  deleteMenuApi\n} from \"../../../../api/menu\";\nimport { getAccessTokenApi } from \"../../../../api/auth\";\nimport AddMenuWebForm from \"../AddMenuWebForm\";\nimport EditMenuWebForm from \"../EditMenuWebForm\";\n\nimport \"./MenuWebList.scss\";\n\nconst { confirm } = ModalAntd;\n\nexport default function MenuWebList(props) {\n  const { menu, setReloadMenuWeb } = props;\n  const [listItems, setListItems] = useState([]);\n  const [isVisibleModal, setIsVisibleModal] = useState(false);\n  const [modalTitle, setModalTitle] = useState(\"\");\n  const [modalContent, setModalContent] = useState(null);\n\n  useEffect(() => {\n    const listItemsArray = [];\n    menu.forEach(item => {\n      listItemsArray.push({\n        content: (\n          <MenuItem\n            item={item}\n            activateMenu={activateMenu}\n            editMenuWebModal={editMenuWebModal}\n            deleteMenu={deleteMenu}\n          />\n        )\n      });\n    });\n    setListItems(listItemsArray);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [menu]);\n\n  const activateMenu = (menu, status) => {\n    const accesToken = getAccessTokenApi();\n    activateMenuApi(accesToken, menu._id, status).then(response => {\n      notification[\"success\"]({\n        message: response\n      });\n    });\n  };\n\n  const onSort = (sortedList, dropEvent) => {\n    const accesToken = getAccessTokenApi();\n\n    sortedList.forEach(item => {\n      const { _id } = item.content.props.item;\n      const order = item.rank;\n      updateMenuApi(accesToken, _id, { order });\n    });\n  };\n\n  const addMenuWebModal = () => {\n    setIsVisibleModal(true);\n    setModalTitle(\"Creando nuevo menú\");\n    setModalContent(\n      <AddMenuWebForm\n        setIsVisibleModal={setIsVisibleModal}\n        setReloadMenuWeb={setReloadMenuWeb}\n      />\n    );\n  };\n\n  const deleteMenu = menu => {\n    const accesToken = getAccessTokenApi();\n\n    confirm({\n      title: \"Eliminando menu\",\n      content: `¿Estas seguro de que quieres eliminar el menu ${menu.title}?`,\n      okText: \"Eliminar\",\n      okType: \"danger\",\n      cancelText: \"Cancelar\",\n      onOk() {\n        deleteMenuApi(accesToken, menu._id)\n          .then(response => {\n            notification[\"success\"]({\n              message: response\n            });\n            setReloadMenuWeb(true);\n          })\n          .catch(() => {\n            notification[\"error\"]({\n              message: \"Error del servidor, intentelo más tarde.\"\n            });\n          });\n      }\n    });\n  };\n\n  const editMenuWebModal = menu => {\n    setIsVisibleModal(true);\n    setModalTitle(`Editando menu: ${menu.title}`);\n    setModalContent(\n      <EditMenuWebForm\n        setIsVisibleModal={setIsVisibleModal}\n        setReloadMenuWeb={setReloadMenuWeb}\n        menu={menu}\n      />\n    );\n  };\n\n  return (\n    <div className=\"menu-web-list\">\n      <div className=\"menu-web-list__header\">\n        <Button type=\"primary\" onClick={addMenuWebModal}>\n          Crear menú\n        </Button>\n      </div>\n\n      <div className=\"menu-web-list__items\">\n        <DragSortableList items={listItems} onSort={onSort} type=\"vertical\" />\n      </div>\n\n      <Modal\n        title={modalTitle}\n        isVisible={isVisibleModal}\n        setIsVisible={setIsVisibleModal}\n      >\n        {modalContent}\n      </Modal>\n    </div>\n  );\n}\n\nfunction MenuItem(props) {\n  const { item, activateMenu, editMenuWebModal, deleteMenu } = props;\n\n  return (\n    <List.Item\n      actions={[\n        <Switch\n          defaultChecked={item.active}\n          onChange={e => activateMenu(item, e)}\n        />,\n        <Button type=\"primary\" onClick={() => editMenuWebModal(item)}>\n          <Icon type=\"edit\" />\n        </Button>,\n        <Button type=\"danger\" onClick={() => deleteMenu(item)}>\n          <Icon type=\"delete\" />\n        </Button>\n      ]}\n    >\n      <List.Item.Meta title={item.title} description={item.url} />\n    </List.Item>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}