{"ast":null,"code":"import { basePath, apiVersion } from \"./config\";\nexport function getPostsApi(limit, offset) {\n  const url = `${basePath}/${apiVersion}/get-posts?limit=5&offset=1`;\n  return fetch(url).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  }).catch(err => {\n    return err;\n  });\n}\nexport function deletePostApi(token, id) {\n  const url = `${basePath}/${apiVersion}/delete-post/${id}`;\n  const params = {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    }\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  }).catch(err => {\n    return err;\n  });\n}\nexport function addPostApi(token, post) {\n  const url = `${basePath}/${apiVersion}/add-post`;\n  const params = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    },\n    body: JSON.stringify(post)\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  }).catch(err => {\n    return err;\n  });\n}\nexport function updatePostApi(token, id, data) {\n  const url = `${basePath}/${apiVersion}/update-post/${id}`;\n  const params = {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    },\n    body: JSON.stringify(data)\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  }).catch(err => {\n    return err;\n  });\n}\nexport function getPostApi(urlPost) {\n  const url = `${basePath}/${apiVersion}/get-post/${urlPost}`;\n  return fetch(url).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  }).catch(err => {\n    return err;\n  });\n}","map":{"version":3,"sources":["/Users/jnanaure87/Desktop/Web_Personal_IC_ConBsaleProductos/web-personal-client-master/src/api/post.js"],"names":["basePath","apiVersion","getPostsApi","limit","offset","url","fetch","then","response","json","result","catch","err","deletePostApi","token","id","params","method","headers","Authorization","addPostApi","post","body","JSON","stringify","updatePostApi","data","getPostApi","urlPost"],"mappings":"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","sourcesContent":["import { basePath, apiVersion } from \"./config\";\n\nexport function getPostsApi(limit, offset) {\n  const url = `${basePath}/${apiVersion}/get-posts?limit=5&offset=1`;\n\n  return fetch(url)\n    .then(response => {\n      return response.json();\n    })\n    .then(result => {\n      return result;\n    })\n    .catch(err => {\n      return err;\n    });\n}\n\nexport function deletePostApi(token, id) {\n  const url = `${basePath}/${apiVersion}/delete-post/${id}`;\n\n  const params = {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    }\n  };\n\n  return fetch(url, params)\n    .then(response => {\n      return response.json();\n    })\n    .then(result => {\n      return result;\n    })\n    .catch(err => {\n      return err;\n    });\n}\n\nexport function addPostApi(token, post) {\n  const url = `${basePath}/${apiVersion}/add-post`;\n\n  const params = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    },\n    body: JSON.stringify(post)\n  };\n\n  return fetch(url, params)\n    .then(response => {\n      return response.json();\n    })\n    .then(result => {\n      return result;\n    })\n    .catch(err => {\n      return err;\n    });\n}\n\nexport function updatePostApi(token, id, data) {\n  const url = `${basePath}/${apiVersion}/update-post/${id}`;\n\n  const params = {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    },\n    body: JSON.stringify(data)\n  };\n\n  return fetch(url, params)\n    .then(response => {\n      return response.json();\n    })\n    .then(result => {\n      return result;\n    })\n    .catch(err => {\n      return err;\n    });\n}\n\nexport function getPostApi(urlPost) {\n  const url = `${basePath}/${apiVersion}/get-post/${urlPost}`;\n\n  return fetch(url)\n    .then(response => {\n      return response.json();\n    })\n    .then(result => {\n      return result;\n    })\n    .catch(err => {\n      return err;\n    });\n}\n"]},"metadata":{},"sourceType":"module"}